# Create a cache "pypi" in /cache/pypi/x/xx/* with 64MB for keys and 100GB disk space
# Store entries up to 2 months
proxy_cache_path /cache/pypi levels=1:2 keys_zone=pypi:64m max_size=100g inactive=2M use_temp_path=off;

# PyPI services (package index)
upstream pypi {
    server pypi.org:443;
    server pypi.org:443;
    server pypi.org:443;
    keepalive 60;
}

# Package downloads
upstream files {
    server files.pythonhosted.org:443;
    server files.pythonhosted.org:443;
    server files.pythonhosted.org:443;
    keepalive 60;
}

server {
    listen 3141 default_server;
    listen 31413 ssl http2;  # Maybe useful in the future

    ssl_certificate /etc/nginx/ssl/ssl.crt;
    ssl_certificate_key /etc/nginx/ssl/ssl.key;

    server_name _;

    # Use the "pypi" cache, cache by URI, allow at most one outgoing request per URI
    proxy_cache pypi;
    proxy_cache_key $uri;
    proxy_cache_lock on;

    # Check if cache is still valid instead of just redownloading full response when expired
    proxy_cache_revalidate on;

    # Allow using stale cache data in case of upstream errors
    proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;

    # Ignore some headers from PyPI
    proxy_ignore_headers "Cache-Control" "Expires" "Vary";

    # Configure outgoing proxy requests
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_set_header Accept-Encoding "";
    proxy_ssl_server_name on;

    # Remove response headers
    proxy_hide_header "Cache-Control";

    # Fix some redirects
    proxy_redirect ~https?://pypi.org(.*) $1;

    # Any unsupported requests
    location / {
        proxy_set_header Host pypi.org;

        # Replace any external references back to this proxy
        sub_filter 'https://pypi.org' '';
        sub_filter 'https://files.pythonhosted.org' '';
        sub_filter_once off;

        # Proxy to PyPI, but don't cache these requests
        proxy_pass https://pypi;
        proxy_cache off;
    }

    # Package index queries, e.g. /simple/httpx/
    location ^~ /simple {
        proxy_set_header Host pypi.org;

        # Replace any external references back to this proxy
        sub_filter 'https://pypi.org' '';
        sub_filter 'https://files.pythonhosted.org' '';
        sub_filter_once off;

        # Include trailing slash always
        rewrite ^(.*[^/])$ $1/ break;

        # Proxy + cache for a short time
        proxy_cache_valid any 1h;
        proxy_pass https://pypi;

        # Report cache status in response
        add_header X-Cache-Status $upstream_cache_status;
    }

    # Package downloads
    location ^~ /packages {
        proxy_set_header Host files.pythonhosted.org;

        # Proxy + cache for a long time
        proxy_cache_valid any 2M;
        proxy_pass https://files;

        # Report cache status in response
        add_header X-Cache-Status $upstream_cache_status;
    }
}
